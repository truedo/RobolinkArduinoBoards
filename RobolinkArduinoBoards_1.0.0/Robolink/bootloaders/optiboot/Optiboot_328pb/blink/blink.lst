   1               		.file	"blink.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	_Z5delayi
  12               	_Z5delayi:
  13               	.LFB6:
  14               		.file 1 "blink.c"
   1:blink.c       **** /*
   2:blink.c       ****  * blink.c - simple LED blinking for ATmega328 on PB5 (Arduino Pin 13)
   3:blink.c       ****  */
   4:blink.c       **** 
   5:blink.c       **** #include <inttypes.h>
   6:blink.c       **** #include <avr/io.h>
   7:blink.c       **** #if !defined(_AVR_IOXXX_H_)
   8:blink.c       **** # if defined(__AVR_ATmega328P__)
   9:blink.c       **** #  include <avr/iom328p.h>
  10:blink.c       **** # elif defined(__AVR_ATmega328PB__)
  11:blink.c       **** #  include <avr/iom328pb.h>
  12:blink.c       **** # endif
  13:blink.c       **** #endif
  14:blink.c       **** #include <util/delay.h>
  15:blink.c       **** 
  16:blink.c       **** void delay(int ms)
  17:blink.c       **** {
  15               		.loc 1 17 0
  16               		.cfi_startproc
  17               	.LVL0:
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22               	.L2:
  18:blink.c       ****   for(; ms!=0; ms--)
  23               		.loc 1 18 0 discriminator 1
  24 0000 0097      		sbiw r24,0
  25 0002 01F0      		breq .L5
  26               	.LVL1:
  27               	.LBB5:
  28               	.LBB6:
  29               		.file 2 "c:\\_ver_arduino\\arduino-1.8.5-windows\\arduino-1.8.5\\hardware\\tools\\avr\\avr\\includ
   1:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    All rights reserved.
   5:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
   6:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    Redistribution and use in source and binary forms, with or without
   7:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    modification, are permitted provided that the following conditions are met:
   8:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
   9:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    * Redistributions of source code must retain the above copyright
  10:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer.
  11:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
  12:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer in
  14:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****      the documentation and/or other materials provided with the
  15:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****      distribution.
  16:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
  17:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    * Neither the name of the copyright holders nor the names of
  18:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****      contributors may be used to endorse or promote products derived
  19:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****      from this software without specific prior written permission.
  20:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
  21:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
  33:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** /* $Id$ */
  34:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
  35:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #ifndef _UTIL_DELAY_H_
  36:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #define _UTIL_DELAY_H_ 1
  37:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
  38:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #ifndef __DOXYGEN__
  39:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #  endif
  42:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #endif  /* __DOXYGEN__ */
  43:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
  44:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #include <inttypes.h>
  45:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #include <util/delay_basic.h>
  46:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #include <math.h>
  47:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
  48:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** /** \file */
  49:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     \code
  51:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     //#define F_CPU 14.7456E6
  53:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     #include <util/delay.h>
  54:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     \endcode
  55:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
  56:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     \note As an alternative method, it is possible to pass the
  57:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     used.
  60:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
  61:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     The functions in this header file are wrappers around the basic
  62:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     convenience functions where actual time values can be specified
  64:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     that compile-time constant expressions will be eliminated by
  66:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     compiler optimization so floating-point expressions can be used
  67:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     frequency passed by the macro F_CPU.
  69:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
  70:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     \note In order for these functions to work as intended, compiler
  71:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     <em>must</em> be an expression that is a known constant at
  73:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     delay will be much longer (and basically unpredictable), and
  75:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     applications that otherwise do not use floating-point calculations
  76:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     will experience severe code bloat by the floating-point library
  77:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     routines linked into the application.
  78:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
  79:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     The functions available allow the specification of microsecond, and
  80:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     millisecond delays directly, using the application-supplied macro
  81:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
  83:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** */
  84:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
  85:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #if !defined(__DOXYGEN__)
  86:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #endif
  89:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
  90:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #ifndef F_CPU
  91:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** /* prevent compiler error by supplying a default */
  92:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** /** \ingroup util_delay
  94:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     \def F_CPU
  95:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     \brief CPU frequency in Hz
  96:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
  97:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     the delay macros.  This macro is normally supplied by the
  99:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     environment (e.g. from within a project header, or the project's
 100:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     fallback if no such user-provided definition could be found.
 102:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
 103:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****     integer value.
 107:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****  */
 108:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** # define F_CPU 1000000UL
 109:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #endif
 110:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
 111:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #ifndef __OPTIMIZE__
 112:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #endif
 114:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
 115:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****   __STDC_HOSTED__
 118:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #  include <math.h>
 119:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #endif
 120:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
 121:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** /**
 122:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    \ingroup util_delay
 123:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
 124:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
 126:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    The macro F_CPU is supposed to be defined to a
 127:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
 129:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
 131:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    When the user request delay which exceed the maximum possible one,
 132:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    user will not be informed about decreased resolution.
 136:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
 137:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    values greater than the maximal possible delay, overflows results in
 140:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    no delay i.e., 0ms.
 141:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
 142:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    microseconds of delay.
 146:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
 147:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    respectively.
 151:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
 152:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    \note
 153:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
 154:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    The implementation of _delay_ms() based on
 155:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    implementations.  In order to get functionality backward compatible
 157:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    must be defined before including this header file. Also, the
 159:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    backward compatible algorithm will be chosen if the code is
 160:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****    not available to the compiler then.
 163:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
 164:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****  */
 165:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** void
 166:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** _delay_ms(double __ms)
 167:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** {
 168:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 	double __tmp ;
 169:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h ****   __STDC_HOSTED__
 172:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 	uint32_t __ticks_dc;
 173:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
 176:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
 179:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
 182:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 	#else
 183:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 		//round up by default
 184:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 	#endif
 186:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 
 187:c:\_ver_arduino\arduino-1.8.5-windows\arduino-1.8.5\hardware\tools\avr\avr\include\util\delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
  30               		.loc 2 187 0
  31 0004 EFE9      		ldi r30,lo8(3999)
  32 0006 FFE0      		ldi r31,hi8(3999)
  33 0008 3197      	1:	sbiw r30,1
  34 000a 01F4      		brne 1b
  35 000c 00C0      		rjmp .
  36 000e 0000      		nop
  37               	.LBE6:
  38               	.LBE5:
  39               		.loc 1 18 0
  40 0010 0197      		sbiw r24,1
  41               	.LVL2:
  42 0012 00C0      		rjmp .L2
  43               	.LVL3:
  44               	.L5:
  45               	/* epilogue start */
  19:blink.c       ****   {
  20:blink.c       ****     _delay_ms(1);
  21:blink.c       ****   }
  22:blink.c       **** }
  46               		.loc 1 22 0
  47 0014 0895      		ret
  48               		.cfi_endproc
  49               	.LFE6:
  51               		.section	.text.startup,"ax",@progbits
  52               	.global	main
  54               	main:
  55               	.LFB7:
  23:blink.c       **** 
  24:blink.c       **** int main(void)
  25:blink.c       **** {
  56               		.loc 1 25 0
  57               		.cfi_startproc
  58               	/* prologue: function */
  59               	/* frame size = 0 */
  60               	/* stack size = 0 */
  61               	.L__stack_usage = 0
  26:blink.c       ****   DDRB = (1<<0); //bit 5 output, all others inputs
  62               		.loc 1 26 0
  63 0000 81E0      		ldi r24,lo8(1)
  64 0002 84B9      		out 0x4,r24
  27:blink.c       ****   DDRC = 0;      //all inputs
  65               		.loc 1 27 0
  66 0004 17B8      		out 0x7,__zero_reg__
  28:blink.c       ****   DDRD = 0;      //all inputs
  67               		.loc 1 28 0
  68 0006 1AB8      		out 0xa,__zero_reg__
  69               	.L7:
  29:blink.c       **** 
  30:blink.c       ****   while(1)
  31:blink.c       ****   {
  32:blink.c       ****     PORTB |= (1<<0);  //high
  70               		.loc 1 32 0 discriminator 1
  71 0008 289A      		sbi 0x5,0
  33:blink.c       ****     delay(400);       //delay
  72               		.loc 1 33 0 discriminator 1
  73 000a 80E9      		ldi r24,lo8(-112)
  74 000c 91E0      		ldi r25,lo8(1)
  75 000e 0E94 0000 		call _Z5delayi
  76               	.LVL4:
  34:blink.c       ****     PORTB &= ~(1<<0); //low
  77               		.loc 1 34 0 discriminator 1
  78 0012 2898      		cbi 0x5,0
  35:blink.c       ****     delay(400);       //delay
  79               		.loc 1 35 0 discriminator 1
  80 0014 80E9      		ldi r24,lo8(-112)
  81 0016 91E0      		ldi r25,lo8(1)
  82 0018 0E94 0000 		call _Z5delayi
  83               	.LVL5:
  24:blink.c       **** {
  84               		.loc 1 24 0 discriminator 1
  85 001c 00C0      		rjmp .L7
  86               		.cfi_endproc
  87               	.LFE7:
  89               		.text
  90               	.Letext0:
  91               		.file 3 "c:\\_ver_arduino\\arduino-1.8.5-windows\\arduino-1.8.5\\hardware\\tools\\avr\\avr\\includ
DEFINED SYMBOLS
                            *ABS*:00000000 blink.c
C:\Users\korea\AppData\Local\Temp\ccbmaKa1.s:2      *ABS*:0000003e __SP_H__
C:\Users\korea\AppData\Local\Temp\ccbmaKa1.s:3      *ABS*:0000003d __SP_L__
C:\Users\korea\AppData\Local\Temp\ccbmaKa1.s:4      *ABS*:0000003f __SREG__
C:\Users\korea\AppData\Local\Temp\ccbmaKa1.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\korea\AppData\Local\Temp\ccbmaKa1.s:6      *ABS*:00000001 __zero_reg__
C:\Users\korea\AppData\Local\Temp\ccbmaKa1.s:12     .text:00000000 _Z5delayi
C:\Users\korea\AppData\Local\Temp\ccbmaKa1.s:54     .text.startup:00000000 main

NO UNDEFINED SYMBOLS
