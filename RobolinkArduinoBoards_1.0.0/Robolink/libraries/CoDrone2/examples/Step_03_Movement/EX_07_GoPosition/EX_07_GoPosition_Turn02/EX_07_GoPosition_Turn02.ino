/*---------------------------------------------------------------------------------------------------
  goPosition (위치로 이동)
  목표 : goPosition의 사용 방법
  구문 : goPosition(이동방향1, 이동거리1, 이동시간, 회전방향, 회전각도, 회전시간)
           
  설명 : 해당하는 위치로 이동합니다.
         원하는 위치와 시간에 따라 드론의 움직임을 제어할 수 있습니다.
         입력한 이동 방향과 이동거리, 이동시간에 따라 이동합니다.
         입력한 회전 방향과 회전 방향, 회전 시간에 따라서 회전합니다.
         드론의 현재 기준으로  앞, 뒤, 왼쪽, 오른쪽, 위, 아래의 방향을 나타냅니다.

         여러 축(x,y,z)의 이동 명령을 동시에 할 수 있습니다.
         이동 거리는 m 단위입니다.
         이동 시간이 함께 사용됩니다.

         이 예제는 드론이 왼쪽으로 회전하며 앞으로 이동하고, 오른쪽으로 회전하며 뒤로 이동합니다.       
  ---------------------------------------------------------------------------------------------------*/

#include "CoDrone2.h"

int direction1 = 0;  // 방향 : 전진
int distance = 0;

int direction2 = 0;
int angle = 0;

int time1 = 0;
int time2 = 0;
void setup()
{
  int flightDuration = 20;          // 비행 지속 시간 설정

  CoDrone2.begin(flightDuration);     // 비행을 위한 초기화와 준비 - 프로그램 시작 후 20초 뒤에 착륙

  CoDrone2.takeoff();               // 이륙 후 5초간의 대기 시간 필요

  CoDrone2.hover(5);                // 5초간 맴돌기 (호버링)

  // - 회전 방향과 각도, 시간 입력

  //------------------------------ 왼쪽으로 회전 ----------------------------//
  direction1 = FORWARD;  // 방향 : 전진
  distance = 1;         // 거리 : 1m
  time1 = 2;             // 시간 : 2초
  
  direction2 = LEFT_TURN;  // 방향 : 전진
  angle = 90;         // 거리 : 1m
  time2 = 2;             // 시간 : 2초

  CoDrone2.goPositon(direction1, distance, time1, direction2, angle, time2);      // (LEFT_TURN 90도) 를 2초 안에 이동
  CoDrone2.hover(1);                               // 1초간 맴돌기 (호버링)

  //------------------------------ 오른쪽으로 회전 ----------------------------//

  CoDrone2.goPositon(BACKWARD, 1, 2, RIGHT_TURN, 90, 2);  // (RIGHT_TURN 90도) 를 2초 안에 회전
  CoDrone2.hover(1);                      // 1초간 맴돌기 (호버링)

  CoDrone2.hover(2);                      // 2초간 맴돌기 (호버링)

  CoDrone2.land();                        // 바닥으로 천천히 착륙
}

void loop()
{
}
