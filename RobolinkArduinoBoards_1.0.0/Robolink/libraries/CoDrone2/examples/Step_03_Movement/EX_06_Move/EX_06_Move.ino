/*---------------------------------------------------------------------------------------------------
  move (롤, 피치, 요, 스로틀을 사용하는 이동)
  목표 : move의 사용 방법
  구문 : move(롤, 피치, 요, 스로틀)
         move(롤, 피치, 요, 스로틀, 지속시간)

  설명 : 이 기능을 사용하여보다 복잡한 비행 동작을 만들 수 있습니다.
         롤, 피치, 요, 스로틀을 사용하여 드론을 제어합니다.

         지속시간을 입력하는 경우에는 해당하는 명령을 입력한 지속시간동안만 유지합니다.

         지속 시간이 지나면 롤, 피치, 요, 스로틀값이 0이 되며 호버링 상태를 유지하게 됩니다.

  - 지속시간: 비행의 지속시간, 지속 시간이 입력되지 않는 경우에는 입력한 값을 유지한채로 비행을 지속 합니다.

  - roll (롤) : 좌우 이동의 출력이며 범위는 -100 에서 100
                기본 값은 0이며, 양수(+)는 우이동, 음수(-)는 좌이동입니다.

  - pitch (피치) : 앞뒤 이동의 출력이며 범위는 -100 에서 100
                   기본 값은 0이며, 양수(+)는 전진, 음수(-)는 후진입니다.

  - yaw (요) : 좌우 회전의 출력이며 범위는 -100 에서 100
               기본 값은 0이며, 양수(+)는 왼쪽, 음수(-)는 오른쪽 회전입니다.

  - throttle (스로틀) : 상승 하강의 출력이며 범위는 -100 에서 100
                        기본 값은 0이며, 양수(+)는 상승, 음수(-)는 하강입니다.

  ---------------------------------------------------------------------------------------------------*/

#include "CoDrone2.h"

int roll = 0;
int pitch = 0;
int yaw = 0;
int throttle = 0;
float durationTime = 0.0;

void setup()
{
  int flightDuration = 20;          // 비행 지속 시간 설정

  CoDrone2.begin(flightDuration);     // 비행을 위한 초기화와 준비 - 프로그램 시작 후 20초 뒤에 착륙

  CoDrone2.takeoff();               // 이륙 후 5초간의 대기 시간 필요

  CoDrone2.hover(5);                // 5초간 맴돌기 (호버링)


  //----------------------------- 변수를 사용한 입력 방법 -------------------------------------//

  roll = 0;               // 롤 값을 0으로 설정      (롤 현재 상태 유지)
  pitch = 0;              // 피치 값을 0으로 설정    (피치 현재 상태 유지)
  yaw = 30;               // 요 값을 30으로 설정     (왼쪽으로 회전)
  throttle = 0;           // 스로틀 값을 0으로 설정  (스로틀 현재 상태 유지)
  durationTime = 1.0;     // 지속 시간 1초 입력      (1초간 명령 실행)

  // 1초동안 30만큼의 출력으로 왼쪽으로 회전
  CoDrone2.move(roll, pitch, yaw, throttle, durationTime);
  //------------------------------------------------------------------------------------------//


  //--------------------------- 지속 시간만큼 명령을 실행하는 경우 -----------------------------//

  // 1초동안 -30만큼의 힘으로 오른쪽으로 회전
  CoDrone2.move(0, 0, -30, 0, 1.0);

  // 1초동안 30만큼의 힘으로 전진
  CoDrone2.move(0, 30, 0, 0, 1.0);

  // 1초동안 30만큼의 힘으로 후진
  CoDrone2.move(0, -30, 0, 0, 1.0);
  //------------------------------------------------------------------------------------------//


  //-------------------------- 지속 시간이 없이 명령을 실행하는 경우 ---------------------------//

  // -30만큼의 힘으로 오른쪽으로 회전 (새로운 명령이 올때까지 계속해서 비행 - 무제한의 시간)
  CoDrone2.move(0, 0, -30, 0);
  delay(2000);    //2초 기다리기

  //-----------------------------------------------------------------------------------------//

  // 이동을 멈추고 현재 상태 유지 (모든 값을 0으로 설정)
  CoDrone2.move(0, 0, 0, 0);

  CoDrone2.hover(1);  // 1초간 맴돌기 (호버링)

  CoDrone2.land();                   // 바닥으로 천천히 착륙
}

void loop()
{
}
